                //Code of MainWindow.xaml

<Window x:Class="Udemy_Project.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Udemy_Project"
        mc:Ignorable="d"
        Title="MainWindow" Height="525" Width="350">
    
      

    <!--<Window.Resources>
    <SolidColorBrush x:Key="numbersColor" Color="#444444"/>
    <SolidColorBrush x:Key="operatorColor" Color="Green"/>
</Window.Resources>-->
    
    <!--
                 OR
    LETS DEFINE STATIC RESOURSES IN APP.XAML-->
    
    
    <Grid Margin="10">
        <!--divide grid into 7 row and 4 column-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
       

        <Label x:Name="resultlabel" 
               Content="0"
               Style="{StaticResource display}" 
               Grid.ColumnSpan="4"/>
        <Button x:Name="acButton" 
                Content="AC"
                Style="{StaticResource additionalButtonStyle}"
                Grid.Row="1"/>
        <Button x:Name="negativeButton" 
                Content="+/-"
                Style="{StaticResource additionalButtonStyle}"
         Grid.Row="1"
         Grid.Column="1"/>
        <Button x:Name="percentageButton"
                Content="%"
                Style="{StaticResource additionalButtonStyle}"
         Grid.Row="1"
         Grid.Column="2"/>
        <Button  x:Name="divisionButton"
                 Click="opeationButton"
                 Content="/"
                 Style="{StaticResource operatorButtonStyle}"
               Grid.Row="1"
                Grid.Column="3"/>
        <Button x:Name="sevenButton"
                Click="numberButton_Click"
            Content="7"
                Style="{StaticResource numberButtonStyle}"
         Grid.Row="2"/>
        <Button x:Name="eightButton" 
                 Click="numberButton_Click"
            Content="8"
               Style="{StaticResource numberButtonStyle}"
         Grid.Row="2"
         Grid.Column="1"/>
        <Button x:Name="nineButton" 
                 Click="numberButton_Click"
            Content="9"
                Style="{StaticResource numberButtonStyle}"
         Grid.Row="2"
         Grid.Column="2"/>
        <Button x:Name="multiplyButton" 
                Click="opeationButton"
            Content="*"
                 Style="{StaticResource operatorButtonStyle}"
                Grid.Row="2"
         Grid.Column="3"/>
        <Button x:Name="fourButton" 
                 Click="numberButton_Click"
            Content="4"
           Style="{StaticResource numberButtonStyle}"
         Grid.Row="3"/>
        <Button x:Name="fiveButton" 
                 Click="numberButton_Click"
            Content="5"
            Style="{StaticResource numberButtonStyle}"
         Grid.Row="3"
         Grid.Column="1"/>
        <Button x:Name="sixButton"
                 Click="numberButton_Click"
                Content="6"
         Style="{StaticResource numberButtonStyle}"
         Grid.Row="3"
         Grid.Column="2"/>
        <Button x:Name="minusButton" 
                Click="opeationButton"
            Content="-"
            Style="{StaticResource operatorButtonStyle}"
                Grid.Row="3"
         Grid.Column="3"/>
        <Button x:Name="oneButton" 
                 Click="numberButton_Click"
            Content="1"
            Style="{StaticResource numberButtonStyle}"
              Grid.Row="4"/>
        <Button x:Name="twoButton" 
                 Click="numberButton_Click"
            Content="2"
            Style="{StaticResource numberButtonStyle}"
          Grid.Row="4"
           Grid.Column="1"/>
        <Button x:Name="threeButton" 
                 Click="numberButton_Click"
            Content="3"
          Style="{StaticResource numberButtonStyle}"
          Grid.Row="4"
         Grid.Column="2"/>
        <Button x:Name="plusButton" 
                Click="opeationButton"
            Content="+"
              Style="{StaticResource operatorButtonStyle}"
              Grid.Row="4"
              Grid.Column="3"/>
        <Button x:Name="zeroButton" 
                 Click="numberButton_Click"
            Content="0"
                Style="{StaticResource numberButtonStyle}"
          Grid.Row="5"
          Grid.ColumnSpan="2"/>
        <Button x:Name="dotButton"
                Click="pointButton_Click"
            Content="."
                Style="{StaticResource numberButtonStyle}"
          Grid.Row="5"
          Grid.Column="2"/>
        <Button x:Name="equalButton" 
            Content="="
                  Style="{StaticResource operatorButtonStyle}"
      Grid.Row="5"
      Grid.Column="3"/>
       
    </Grid>
</Window>


<----------------------------Code of MainWindow.xaml.cs----------------->


using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Udemy_Project
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        double lastNumber, result;
        SelectedOperator selectedOperator;
        public MainWindow()
        {
            InitializeComponent();

            //resultlabel.Content = "14321";
            acButton.Click += AcButton_Click;
            negativeButton.Click += NegativeButton_Click;
            percentageButton.Click += PercentageButton_Click;
            equalButton.Click += EqualButton_Click;
        }

        private void EqualButton_Click(object sender, RoutedEventArgs e)
        {
            double newNumber;
            if (double.TryParse(resultlabel.Content.ToString(), out newNumber))
            {
                switch (selectedOperator)
                {

                    case SelectedOperator.Addition:
                        result = simpleMath.add(lastNumber, newNumber);
                        break;
                    case SelectedOperator.Substraction:
                        result = simpleMath.minus(lastNumber, newNumber);
                        break;
                    case SelectedOperator.Division:
                        result = simpleMath.divide(lastNumber, newNumber);
                        break;
                    case SelectedOperator.Multiplication:
                        result = simpleMath.multiply(lastNumber, newNumber);
                        break;
                }
                resultlabel.Content = result.ToString();



            }
        }
        private void PercentageButton_Click(object sender, RoutedEventArgs e)
        {
            double tempNumber;
            if (double.TryParse(resultlabel.Content.ToString(), out tempNumber))
            {
                tempNumber = (tempNumber / 100);
                if(lastNumber != 0) 
                    tempNumber *= lastNumber;
                
                resultlabel.Content = tempNumber.ToString();

            }
        }

        private void NegativeButton_Click(object sender, RoutedEventArgs e)
        {
            if(double.TryParse(resultlabel.Content.ToString(),out lastNumber))
            {
                lastNumber = lastNumber * -1;
                resultlabel.Content = lastNumber.ToString();    
            }
        }

        private void AcButton_Click(object sender, RoutedEventArgs e)
        {
            resultlabel.Content = "0";

        }
        private void opeationButton(object sender, RoutedEventArgs e)
        {
            if (double.TryParse(resultlabel.Content.ToString(), out lastNumber))
            {
                resultlabel.Content ="";

            }

            if (sender == multiplyButton)
                selectedOperator = SelectedOperator.Multiplication;
            if(sender == divisionButton)
                selectedOperator = SelectedOperator.Division;
            if (sender == plusButton)
                selectedOperator = SelectedOperator.Addition;
            if (sender == minusButton)
                selectedOperator = SelectedOperator.Substraction;


        }

        private void pointButton_Click(object sender, RoutedEventArgs e)
        {
            if (resultlabel.Content.ToString().Contains(".")){ 
               //Do nothing
            }
            else {
                resultlabel.Content = $"{resultlabel.Content}.";
            }
        }

        private void numberButton_Click(object sender, RoutedEventArgs e)
        {
            //int selectedValue = 0;
            //if(sender==zeroButton) 
            //    selectedValue = 0;
            //if(sender==oneButton)
            //    selectedValue = 1;
            //if(sender==twoButton)
            //    selectedValue = 2;
            //if(sender==threeButton)
            //    selectedValue = 3;
            //if(sender==fourButton)
            //    selectedValue = 4;
            //if(sender==fiveButton)
            //    selectedValue = 5;
            //if(sender==sixButton)
            //    selectedValue = 6;
            //if(sender==sevenButton)
            //    selectedValue = 7;
            //if(sender==eightButton)
            //    selectedValue = 8;
            //if(sender==nineButton)
            //    selectedValue = 9;

            //OR

            int selectedValue = int.Parse((sender as Button).Content.ToString());
                
            if (resultlabel.Content.ToString() == "0")
            {
                resultlabel.Content = $"{selectedValue}";
            }
            else
            {
                resultlabel.Content = $"{resultlabel.Content}{selectedValue}";
            }
        }
    
        public enum SelectedOperator
        {
            Addition,
            Substraction,
            Multiplication,
            Division
        }

        public class simpleMath
        {
            public static double add(double n1, double n2)
            {
                return n1 + n2;
            }
            public static double minus(double n1, double n2)
            {
                return n1 - n2;
            }
            public static double multiply(double n1, double n2)
            {
                return n1 * n2;
            }
            public static double divide(double n1, double n2)
            {
                if (n2 == 0)
                {
                    MessageBox.Show("Divide by 0 is not supported", "Wrong Operation", MessageBoxButton.OK,MessageBoxImage.Error);
                    return 0;
                }
                return n1 / n2;
            }

        }
    
    }
}


<<----------------------------Code of App.xaml--------------------------->>


<Application x:Class="Udemy_Project.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Udemy_Project"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="numbersColor" Color="#333333"/>
        <SolidColorBrush x:Key="operatorColor" Color="Green"/>
      
        <!--Implicit Style -->
        <!--- background = "{staticresource numbercoloer }" in mainwindow.xaml-->
        <!--- background = "{staticresource operatorcoloer }"  for each particular button in mainwindow.xaml-->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Margin" Value="8"/>
        </Style>
        
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="60"/>
        </Style>
        
        <!--Explicit Style-->

        <Style TargetType="Button" x:Key="numberButtonStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Background" Value="{StaticResource numbersColor}"/>
            
        </Style>

        <Style TargetType="Button" x:Key="operatorButtonStyle" BasedOn="{StaticResource numberButtonStyle}">
            <Setter Property="Background" Value="{StaticResource operatorColor}"/>
        </Style>

        <Style TargetType="Button" x:Key="additionalButtonStyle" BasedOn="{StaticResource numberButtonStyle}">
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style TargetType="Label" x:Key="display">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="FontSize" Value="60"/>

        </Style>
    </Application.Resources>
</Application>
----------------------------------------------------------------------------------------------------------------------------